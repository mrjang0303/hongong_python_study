# 문제: 프로그래머스 Lv.1 '크기가 작은 부분 문자열'
# 설명: 숫자로 이루어진 문자열 t와 p가 주어질 때, t에서 p와 길이가 같은 부분문자열 중에서, 
#       이 부분문자열이 나타내는 수가 p가 나타내는 수보다 작거나 같은 것이 나오는 횟수를 return하는 함수 solution을 완성하세요.
#       예를 들어, t="3141592"이고 p="271" 인 경우, t의 길이가 3인 부분 문자열은 314, 141, 415, 159, 592입니다.
#       이 문자열이 나타내는 수 중 271보다 작거나 같은 수는 141, 159 2개 입니다.
# 링크: https://school.programmers.co.kr/learn/courses/30/lessons/147355

# 풀이
# 1. 먼저 len() 함수를 사용하여 주어진 문자열 t와 p의 길이를 각각 len_t와 len_p 변수에 저장합니다.
# 2. for 반복문을 사용하여 t 문자열을 처음부터 순회합니다. 이때 range의 범위를 len_t - len_p + 1로 설정하여 p의 길이와 동일한 모든 부분 문자열을 검사할 수 있도록 합니다.
# 3. 반복문 안에서, 문자열 슬라이싱(t[i : i + len_p])을 이용해 p와 길이가 같은 부분 문자열을 하나씩 얻습니다.
# 4. int() 함수를 사용하여 얻은 부분 문자열과 p 문자열을 **정수(integer)**로 변환합니다. 이는 문자열이 아닌 숫자의 크기를 비교하기 위함입니다.
# 5. 변환된 부분 문자열의 수가 p의 수보다 작거나 같을 경우, answer 변수를 1 증가시킵니다.
# 6. 반복문이 모두 끝나면, 조건을 만족하는 부분 문자열의 총 개수를 담고 있는 answer를 반환합니다.

def solution(t, p):
    answer = 0
    
    len_t = len(t)
    len_p = len(p)
    
    answer = 0
    
    for i in range(len_t - len_p + 1):
        if (int(t[i : i + len_p]) <= int(p)):
            answer += 1

    return answer